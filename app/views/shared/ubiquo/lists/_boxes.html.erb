<% 
=begin

example:
  def item_list(collection, pages, options = {}, &block)
    concat render(:partial => "shared/ubiquo/lists/boxes", :locals => {
          :name => 'item',
          :rows => collection.collect do |item| 
            {
              :id => item.id, 
              :content => capture(item, &block),
              :actions => item_actions(item)
            }
          end,
          :pages => pages
        })
  end

parameters:
 :name         - The name of the model listed
 :rows         - An Array with each row of the list. Each row is a Hash:
    :id        - The id of this element
    :content   - The content of the row
    :actions   - An Array with the actions for this element
 :pages        - Pagination for this list.

optionals:

 :actions_width   - Width (in pixels) of the Actions column (default 100)
 :hide_actions - Set to true to hide actions (default: false)
 
=end
%>
<%
actions_width ||= 100
hide_actions ||= false
%>
<% if rows.size > 0 %>
  <div class="box_list">
    <% rows.each do |row| %>
      <div id="<%= name %>_<%= row[:id] %>" class="box <%= cycle('even', 'odd') %>">
        <%= row[:content] %>
        
        <% unless hide_actions %>
          <div class="actions">
            <%= row[:actions].delete_if{|r|r.blank?}.join(" | ") %>       
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
  <% if !pages.nil? %>
    <%= render :partial => "shared/ubiquo/pagination", :locals => { :item_pages => pages } %>
  <% end %>

<% else %>
  <p id="empty">
    <%= t 'ubiquo.empty', :thing => name.classify.constantize.human_name.downcase %>
  </p>
<% end %>
